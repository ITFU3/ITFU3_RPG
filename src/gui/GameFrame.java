package gui;

import character.MonsterCharacter;
import gameHandler.KeyHandler;
import gameHandler.MonsterAI;
import gameHandler.MovementHandler;
import gui.GuiHelper.HealthBarLabel;
import java.awt.Color;
import java.awt.Dimension;
import java.awt.Font;
import java.util.ArrayList;
import javax.swing.JComponent;
import javax.swing.JLabel;
import main.Game;
import main.Map;

/**
 *
 * @author Steffen Haas
 * @author Matthias Dr√∂ge
 */
public class GameFrame extends javax.swing.JFrame {
    ArrayList<JComponent> components = new ArrayList<JComponent>();
    int testHp = Game.getInstance().getPlayer().getHealth();
    /**
     * Creates new form GameFrame
     */
    public GameFrame() {
        initComponents();
        initFrameSetup();
        initComponentList();
        
        this.addKeyListener(new KeyHandler());
        this.setLocationRelativeTo(null);
        
        // Arean Setup
        arenaTextArea.setText( Map.getInstance().getMap());
        arenaTextArea.setEnabled(false);
        arenaTextArea.setDisabledTextColor(Color.BLACK);
        arenaTextArea.setFont( new java.awt.Font("Courier New", 0, 13) );
        
        playerNamelLabel.setFont(new Font("Courier New", Font.BOLD, 15));
        // init Healthbar
        ((HealthBarLabel)playerHealthBarLabel).setHealthText(Game.getInstance().getPlayer().getHealth());
       
        // needed for keyboard to work
        setButtonFocus(false);
     
    }
    
    
    
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel2 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        arenaTextArea = new javax.swing.JTextArea();
        downButton = new javax.swing.JButton();
        btn_EndRound = new javax.swing.JButton();
        healthLabel = new javax.swing.JLabel();
        playerHealthBarLabel = new HealthBarLabel(Game.getInstance().getPlayer().getHealth());
        jButton1 = new javax.swing.JButton();
        upButton = new javax.swing.JButton();
        rightButton = new javax.swing.JButton();
        leftButton = new javax.swing.JButton();
        playerNamelLabel = new javax.swing.JLabel();

        jLabel2.setText("jLabel2");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        arenaTextArea.setColumns(20);
        arenaTextArea.setFont(new java.awt.Font("Courier New", 0, 13)); // NOI18N
        arenaTextArea.setRows(5);
        arenaTextArea.setDisabledTextColor(new java.awt.Color(0, 0, 0));
        jScrollPane1.setViewportView(arenaTextArea);

        downButton.setText("Down");
        downButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                downButtonActionPerformed(evt);
            }
        });

        btn_EndRound.setText("End Round");
        btn_EndRound.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_EndRoundActionPerformed(evt);
            }
        });

        healthLabel.setText("Health");

        playerHealthBarLabel.setText("");

        jButton1.setText("jButton1");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        upButton.setText("Up");
        upButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                upButtonActionPerformed(evt);
            }
        });

        rightButton.setText("Right");
        rightButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                rightButtonActionPerformed(evt);
            }
        });

        leftButton.setText("Left");
        leftButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                leftButtonActionPerformed(evt);
            }
        });

        playerNamelLabel.setText("- Player Name -");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                    .addComponent(healthLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                    .addComponent(playerHealthBarLabel, javax.swing.GroupLayout.DEFAULT_SIZE, 200, Short.MAX_VALUE)))
                            .addComponent(playerNamelLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 500, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(200, 200, 200))))
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btn_EndRound)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(414, 414, 414)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(upButton)
                                    .addComponent(downButton))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addComponent(leftButton)
                                .addGap(90, 90, 90)))
                        .addComponent(rightButton)))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(playerNamelLabel)
                        .addGap(18, 18, 18)
                        .addComponent(healthLabel)
                        .addGap(18, 18, 18)
                        .addComponent(playerHealthBarLabel)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btn_EndRound)
                        .addGap(14, 14, 14))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(66, 66, 66)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(upButton)
                                .addGap(53, 53, 53)
                                .addComponent(downButton))
                            .addGroup(layout.createSequentialGroup()
                                .addGap(41, 41, 41)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(rightButton)
                                    .addComponent(leftButton))))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 54, Short.MAX_VALUE)))
                .addComponent(jButton1)
                .addContainerGap(76, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void downButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_downButtonActionPerformed
        MovementHandler.down();
        Game.updateGUI();
    }//GEN-LAST:event_downButtonActionPerformed

    private void btn_EndRoundActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_EndRoundActionPerformed
        if( Game.getInstance().getMonsters().size() <= 0 ){
            Game.getInstance().nextLevel();
            System.out.println("NEXT LEVEL: " + Game.getInstance().getLevel());
        }else{
            //DoMonsters Turn HERE!!!
            
        }
        // Reset PLayerCharacter
        Game.getInstance().getPlayer().setAllowedMoves(
        Game.getInstance().getPlayer().getMovement()
        );
        Game.getInstance().getPlayer().setAllowedAttacks(1);
    }//GEN-LAST:event_btn_EndRoundActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
       // reduce Player Health Test
        testHp = testHp-1;
        System.out.println(testHp);
        ((HealthBarLabel)playerHealthBarLabel).setHealthText(testHp);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void upButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_upButtonActionPerformed
       MovementHandler.up();
        Game.updateGUI();
    }//GEN-LAST:event_upButtonActionPerformed

    private void rightButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_rightButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_rightButtonActionPerformed

    private void leftButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_leftButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_leftButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(GameFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GameFrame().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextArea arenaTextArea;
    private javax.swing.JButton btn_EndRound;
    private javax.swing.JButton downButton;
    private javax.swing.JLabel healthLabel;
    private javax.swing.JButton jButton1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton leftButton;
    private javax.swing.JLabel playerHealthBarLabel;
    private javax.swing.JLabel playerNamelLabel;
    private javax.swing.JButton rightButton;
    private javax.swing.JButton upButton;
    // End of variables declaration//GEN-END:variables

   
    
    

    private void initComponentList() {
        components.add(arenaTextArea);
        components.add(upButton);
        components.add(rightButton);
        components.add(downButton);
        components.add(leftButton);
        components.add(btn_EndRound);
        components.add(jButton1);
    }
    
    public void setButtonFocus(boolean focus ) {
        for (JComponent component : components) {
            component.setFocusable(focus);
        }
    }

    private void initFrameSetup() {
        this.setResizable(false);
        Dimension dimensions = new Dimension(900, 600);
        
        this.setPreferredSize(dimensions);
        this.setMinimumSize(dimensions);
        this.setMaximumSize(dimensions);
        
        this.addKeyListener(new KeyHandler());
        this.setLocationRelativeTo(null);
        this.setVisible(true);
        
    }
    
     public javax.swing.JTextArea getArenaTextArea(){
        return arenaTextArea;
    }

    public JLabel getHealthLabel() {
        return healthLabel;
    }

    public JLabel getPlayerHealthBarLabel() {
        return playerHealthBarLabel;
    }

    public JLabel getPlayerNamelLabel() {
        return playerNamelLabel;
    }
     
     
    
}